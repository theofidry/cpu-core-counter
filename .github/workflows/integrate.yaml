name: "Integrate"

on: # yamllint disable-line rule:truthy
    pull_request: null
    push:
        branches:
            - "main"

jobs:
    coding-standards:
        name: "Coding Standards"
        runs-on: "ubuntu-latest"
        strategy:
            matrix:
                php-version:
                    - "8.1"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v3.1.0"

            -   name: "Set up PHP"
                uses: "shivammathur/setup-php@2.22.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    tools: "phive"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Install ComposerNormalize"
                run: "phive install composer-normalize --trust-gpg-keys C00543248C87FB13"

            -   name: "Install PHP-CS-Fixer"
                run: "phive install php-cs-fixer --trust-gpg-keys E82B2FB314E9906E"

            -   name: "Prevent the CI to install PHIVE"
                run: "echo '#!/usr/bin/env sh' > .phive/install-phive"

            -   name: "Correct the PHIVE link"
                run: "ln -sf $(which phive) ./tools/phive"

            -   name: "Run the CS linter"
                run: "make cs_lint"

    auto-review:
        name: "Auto-Review"
        runs-on: "ubuntu-latest"
        strategy:
            matrix:
                php-version:
                    - "8.1"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v3.1.0"

            -   name: "Set up PHP"
                uses: "shivammathur/setup-php@2.22.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    tools: "phive"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run Auto-Review tests"
                run: "make autoreview"

    tests:
        name: "Tests"
        runs-on: "ubuntu-latest"
        strategy:
            matrix:
                php-version:
                    - "7.4"
                    - "8.0"
                    - "8.1"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v3.1.0"

            -   name: "Set up PHP"
                uses: "shivammathur/setup-php@2.22.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run the PHPUnit tests"
                run: "make phpunit"

    legacy-tests:
        name: "Legacy Tests"
        runs-on: "ubuntu-latest"
        strategy:
            matrix:
                php-version:
                    - "7.2"
                    - "7.3"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v3.1.0"

            -   name: "Remove incompatible dev dependencies"
                run: |
                    composer remove --dev fidry/makefile --no-update --no-install;
                    composer remove --dev theofidry/php-cs-fixer-config --no-update --no-install;
                    composer remove --dev webmozarts/strict-phpunit --no-update --no-install;

            -   name: "Set up PHP"
                uses: "shivammathur/setup-php@2.22.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run the PHPUnit tests"
                run: "vendor/bin/phpunit --configuration phpunit_legacy.xml.dist"

    infection:
        name: "Infection"
        runs-on: "ubuntu-latest"
        strategy:
            matrix:
                php-version:
                    - "8.1"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v3.1.0"

            -   name: "Set up PHP"
                uses: "shivammathur/setup-php@2.22.0"
                with:
                    coverage: "xdebug"
                    php-version: "${{ matrix.php-version }}"
                    tools: "phive"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Install Infection"
                run: "phive install infection --trust-gpg-keys C5095986493B4AA0"

            -   name: "Prevent the CI to install PHIVE"
                run: "echo '#!/usr/bin/env sh' > .phive/install-phive"

            -   name: "Correct the PHIVE link"
                run: "ln -sf $(which phive) ./tools/phive"

            -   name: "Run PHPUnit with coverage"
                run: "make phpunit_coverage_infection"

            -   name: "Run Infection"
                run: "make infection"
